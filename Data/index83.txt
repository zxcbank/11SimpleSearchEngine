C:\itmo\OP\10TTaskScheduler\cmake-build-debug\_deps\googletest-src\docs\gmock_cook_book.md
21460
0 93
0x7fff7c8dad10 1
0x7fff7c8dad40 1
0x7fff7c8dad70 1
0x7fff7c8dada0 1
1 59
10 13
100 3
11 4
14 2
17 4
2 59
20 1
2017 2
2018 1
21 1
23 1
26 1
27 2
3 36
321 1
4 19
42 5
4th 1
5 62
50 1
50: 1
6 11
7 23
9 2
: 96
::clear 1
::set 2
::testing::_ 32
::testing::action 3
::testing::actioninterface 3
::testing::allof 5
::testing::an 1
::testing::anynumber 2
::testing::args 1
::testing::atleast 1
::testing::cardinality 1
::testing::cardinalityinterface 1
::testing::contains 1
::testing::defaultvalue 2
::testing::doall 4
::testing::elementsare 1
::testing::elementsarearray 2
::testing::eq 1
::testing::field 2
::testing::flags_gmock_verbose 1
::testing::foo 1
::testing::ge 3
::testing::gt 6
::testing::hassubstr 1
::testing::ignoreresult 1
::testing::insequence 3
::testing::invoke 8
::testing::invokeargument 3
::testing::invokewithoutargs 2
::testing::le 1
::testing::lt 4
::testing::makeaction 1
::testing::makecardinality 1
::testing::makepolymorphicaction 1
::testing::makepolymorphicmatcher 1
::testing::matcher 5
::testing::matches 1
::testing::matchresultlistener 1
::testing::mock 1
::testing::mockfunction 1
::testing::ne 2
::testing::nicemock 2
::testing::not 2
::testing::notnull 3
::testing::pointee 2
::testing::polymorphicaction 1
::testing::polymorphicmatcher 1
::testing::printtostring 1
::testing::property 1
::testing::return 9
::testing::returnref 2
::testing::safematchercast 2
::testing::savearg 1
::testing::sequence 2
::testing::setargpointee 3
::testing::setarrayargument 2
::testing::staticasserttypeeq 1
::testing::strictmock 1
::testing::truly 1
::testing::typedeq 1
::testing::unorderedelementsare 1
::testing::unused 2
::testing::withargs 1
\m 1
_ 59
_t 1
_with_calltype 1
a 530
a1 2
abc 5
abctest 1
ability 2
able 4
about 19
above 18
abs 1
absl::notification 1
absl::strcat 1
absl::strformat 1
absolute 1
absorb 1
abstract 1
abstraction 1
abuse 2
accepted 1
accepting 1
accepts 7
access 2
accessing 1
accesslevel 2
accesslevel::kinternal 4
achieve 1
action 127
action1 4
action2 4
action: 3
action_1 1
action_2 1
action_n 1
action_p 9
action_p2 4
action_p3 1
action_template 7
actioninterface 3
actionname 3
actionp 1
actionp2 1
actions 36
actions: 1
active 4
actual 5
actual: 7
actual_array 2
actual_proto 2
actually 5
acyclic 1
adaptor 5
adaptors 1
add 18
adding 3
addition 1
additional 7
address 2
addresses 1
adds 1
adjust 1
advanced 3
affect 5
affects 2
after 20
afterwards 1
again 6
against 3
aka 1
algorithm 2
algorithms 1
alias: 1
alive 1
all 35
allargs 2
alleviate 2
allof 8
allofarray 2
allow 7
allowed 6
allows 12
already 5
also 36
alternative 4
alternatively 2
although 3
always 14
ambiguous 1
amenable 1
amount 1
an 145
and 288
and_0_value_params 1
and_1_value_params 2
and_2_value_params 1
and_n_value_params 1
angled 1
another 7
answer 3
any 29
anynumber 5
anyof 1
anyofarray 1
anything 11
anything: 1
anyway 2
api 3
appear 1
appendpacket 2
applicable 1
applied 1
applying 1
appreciate 1
approaches 1
april 2
arbitrary 2
are 89
aren 4
arg 12
arg0 7
arg0_type 1
arg1 8
arg1_type 2
arg2 2
arg_1 2
arg_2 2
arg_m 2
arg_type 5
arghh 1
argk 1
argk_type 1
args 23
args_type 2
argument 96
argument: 2
arguments 78
arguments: 4
argumenttuple 5
arithmetic 1
around 4
array 8
arraymutator 1
arrays 1
as 135
as: 1
ask 2
asked 1
aspects 1
assert_true 1
assertion 4
assertions 4
assign 6
assignment 1
associative 1
asstdfunction 8
assume 2
assuming 1
assure 1
assured 1
asynchronous 4
at 21
atleast 2
attention 1
author 2
auto 3
automatically 4
available 1
avoid 4
avoids 1
aware 1
away 4
awkward 2
b 22
baaad 1
back 1
background 1
bad 2
baffle 1
ban 1
bar 89
bar1 2
bar2 2
baractionp 2
barplusbazeq 2
barplusbazeqmatcher 3
base 12
base_filename 2
based 16
basically 1
basics 1
basis 1
baz 13
bazactionp2 2
be 189
because 4
becomes 2
been 7
before 18
begin 3
behave 3
behavior 25
behaviors 5
behind 1
being 18
believe 1
belongs 1
below 1
benefits 1
best 4
better 9
between 8
big 1
bigger 1
bit 1
blah 12
blindly 1
block 1
blocking 1
blockingclosure 3
body 5
bool 93
bool_value 2
boolandint 2
borrowed 1
both 8
bothered 1
bound 4
brackets 1
break 2
breaking 2
brevity 2
bring 2
brittle 2
broken 1
bug 5
build 7
buildfoofortest 1
built 11
bunch 1
business 1
but 56
buzz 26
buzzer 7
by 81
by: 1
bye 1
bymove 8
bypass 1
bytes 2
c 37
c5f08bf91944ce1b19bcf414fa1760e69d20afc2 1
calculatebar 3
calculated 1
calculatesum 3
call 80
call: 4
call_count 7
callable 10
callback 18
callbacks 2
called 52
called: 1
callee 2
caller 1
calling 5
callout 11
calls 51
calls: 1
calltype 5
can 199
cannot 8
capable 1
cardinalities 2
cardinality 5
cardinalityinterface 3
cardinalitylist 1
care 5
careful 1
carefully 1
cares 1
case 13
case: 1
cases 1
cases: 1
cast 5
casting 1
casts 1
catch 2
catches 1
cause 3
cautious 1
caveats 1
cc 2
cc:14: 2
cc:15: 2
cc:16: 2
certain 4
chain 1
chains 2
challenges 1
chance 2
change 20
changed 2
changes 1
changing 4
char 37
chatty 1
check 6
check_point_name 1
checker 1
checkmap 3
checkpoint 3
checkpoints 3
checks 1
child 1
choice 1
choose 1
chosen 1
clashes 1
class 143
class: 2
classes 8
clause 4
cleaning 1
clear 2
clearing 1
clearly 1
client 1
clients 1
closed 2
closure 2
cluttered 1
coarse 1
code 88
code: 1
coding 1
collectively 1
colspan 8
com 6
combine 2
combined 1
combining 2
combiningmatchers 2
come 2
comma 1
command 4
commas 3
commit 1
common 4
commonly 1
community 1
compare 1
compared 1
compares 1
comparing 1
comparison 1
compatible 3
compilation 4
compile 12
compiler 23
compiling 2
complete 3
completeness 1
complex 9
complexjob 10
complicated 1
composed 1
composing 1
composite 1
concepts 1
concern 3
concerned 1
concrete 21
concretepacketstream 5
condition 2
conditions 2
confident 1
confirms 1
cons 1
consider 1
considers 1
consists 2
const 130
const_iterator 1
constant 1
constexpr 1
constrain 1
constraining 1
constraint 4
constraints 3
construct 4
constructed 1
constructible 2
constructor 11
constructors 2
constructors: 1
constructs 1
consumed 1
contain 3
container 8
containers 7
contains 5
context 4
continue 1
contract 3
contrib 1
control 4
controlling 2
convenience 5
convenient 4
convenient: 1
conveniently 2
conversion 2
convert 1
converted 7
convertible 1
converts 2
cookbook 1
cooperate 1
copiable 1
copied 3
copies 2
copy 13
copyable 3
copying 2
correct 1
correctly 1
correctly: 1
corresponding 2
cost 1
could 17
count 4
count_if 1
counted 2
counter 4
couple 1
coupling 1
cover 1
covers 1
cpp 174
crash 1
create 8
createconnection 3
created 11
creates 5
creating 3
criteria 1
current 1
currently 1
custom 10
customize 1
custommatcherclass 1
d 8
dag 7
data 3
dead 2
deadlocks 1
dealing 1
debug 3
debugging 3
decision 2
declaration 1
declare 3
declared 2
declaring 1
decompose 1
deeper 1
default 40
default_bar 3
defaultvalue 6
define 37
defined 18
defines 5
defining 6
definition 8
definitions 3
degenerated 1
delegate 5
delegated 1
delegates 1
delegatetofake 3
delegating 5
delegatingtofake 2
delegation 1
delete 4
deletearg 1
deleted 2
demanding 1
depend 1
dependency 1
depending 3
depends 1
derive 1
derived 6
describe 2
described 1
describenegationto 7
describes 8
describeto 9
description 11
description_string 3
description_string_1 1
description_string_2 1
description_string_expression 1
descriptions 2
descriptive 1
designing 1
desired 1
despite 1
destroy 2
destroyed 6
destructed 4
destructor 11
destructors 3
detailed 1
details 1
determined 2
developing 1
did 2
die 7
dies 3
differ 2
difference 5
different 26
differentiate 1
difficult 2
dimensional 1
directed 2
directly 7
directory 1
disallowing 1
disambiguate 4
discussed 1
dispatchevent 2
distancetoorigin 3
distancetooriginwithindex 2
distancetooriginwithlabel 2
distinct 1
distinguish 1
distinguishing 1
divisible 12
divisibleby7 3
divisibleby7matcher 3
do 63
doall 9
documentation 1
documents 1
does 15
doesn 29
doing 8
domain 2
domaketurtle 2
don 34
done 10
don’t 1
dosharebuzz 6
dosomething 4
dosomethingtoupdatevalue 1
dothat 29
dothis 51
double 31
doubles 1
down 2
downside 1
downside: 1
dozens 1
drop 1
dummy 2
dump 1
duplicatearg 3
duplicating 1
dx 3
dy 3
dynamically 1
e 29
each 7
each: 1
earlier 1
easier 4
easily 9
easy 4
edge 1
effect 2
effective 1
effects 7
efficient 2
eg 1
either 9
elem 5
element 11
elements 6
elementsare 10
elementsarearray 6
em 4
emacs 3
empty 2
enable 1
enables 1
encounter 1
encountered 1
end 6
endraw 1
enough 4
enqueueevent 1
enqueueeventtest 1
ensure 2
enter 1
entire 2
enum 1
eq 6
equal 3
equals 1
equalsproto 2
equivalent 1
equivalents: 1
error 26
error: 1
errors 9
es 1
especially 4
essential 1
essentially 1
etc 9
evaluate 1
even 13
evennumber 2
evennumbercardinality 2
event_queue 2
eventdispatcher 2
eventqueue 2
eventqueuetest 1
events 1
eventually 2
ever 3
every 7
everyone 1
everything 1
everywhere 1
evident 1
exact 3
exactly 10
example 59
example: 25
examples 3
except 4
execute 5
executed 6
executes 2
execution 1
exercise 2
exercises 1
exercising 1
exhibit 1
exhibits 1
existing 6
exit 1
expanding 1
expect 8
expect_call 189
expect_calls 1
expect_eq 9
expect_false 1
expect_ne 3
expect_that 14
expect_true 1
expectation 17
expectations 29
expected 4
expected: 9
expected_container 2
expected_sum 4
expected_sum_ 5
expected_vector1 2
expected_vector2 2
expected_vector3 3
expecting 2
expecting: 1
expects 6
experiencing 1
explain 4
explains 2
explanation 1
explicit 7
explicitly 6
express 2
expressed 1
expression 9
extend 1
extending 1
extensible 1
extension 2
externally 1
extra 2
f 28
fact 1
factory 4
fail 8
failed 3
fails 5
fails: 1
failure 7
failures 3
failures: 1
fake 13
fake_ 5
fakefoo 4
fakefoo:: 1
fakefoo::dothat 1
fakefoo::dothis 3
fakes 1
false 6
familiar 1
family 3
fancier 1
fancy 1
faster 2
fear 1
feature 3
few 1
fictional 1
field 10
figure 2
file 21
file: 1
file_path 2
fileinterface 3
fileops 2
files 1
fill 2
finally 2
find 7
fine 5
finish 1
finishes 1
fired 1
fires 3
first 29
fit 3
fix 4
fixed 2
fixing 1
fixture 2
flag 10
flexibility 1
flexible 3
floating 1
flush 2
flushifdirty 1
follow 3
followed 3
following 12
follows 1
foo 252
foo::add 1
foo::bar 1
foo::baz 2
foo::concrete 6
foo::last_field 1
foo::name 1
foo::number 2
foo::other_field 1
foo::some_field 1
foo_factory 1
foo_test 7
foo_type 1
fooaction 2
foomatcher 1
foomatcherp 1
foomatcherpk 2
footest 3
for 159
force 2
forced 1
forcing 1
forever 1
forget 1
forgot 1
forgotten 1
former 2
forms 1
forth 1
fortunately 1
forwarded 1
forwarders 1
forwarding 1
found 1
fragile 2
frames 1
free 5
freedom 1
frequently 1
friendly 4
friends 1
from 39
full 2
full_filename 3
fun 3
function 118
function: 3
function_type 2
functional 2
functionalities 2
functionality 1
functionally 1
functions 21
functionsasactions 2
functor 11
functors 2
further 1
g 22
g3_mock_callbacks 1
g3_testing_logs 1
gadget 2
gaining 1
gap 1
ge 6
general 10
generally 2
generate 8
generated 4
generating 2
generic 3
george 1
get 14
getbar 12
getdomainowner 7
getnames 2
getpacket 3
getpair 3
getprevvalue 2
gets 1
getsize 2
getter 1
gettimeout 2
getvalue 6
github 1
give 7
given 12
gives 4
giving 2
global 5
gmock 86
gmock_cheat_sheet 1
gmock_for_dummies 2
gmock_verbose 4
god 1
goes 2
going 1
gone 1
good 13
google 7
googletest 10
got 2
grabs 1
graph 2
great 1
greater 3
group 1
gt 7
gtest_stack_trace_depth 2
guarantee 4
guarantees 2
guess 1
guessed 2
guide 2
h 5
habit 1
had 2
handed 1
handles 1
handling 1
handy 1
happen 7
happens 2
happily 1
happy 4
hard 3
harder 4
has 38
has_2_template_params 1
has_m_template_params 4
hasabsolutevalue 3
hasfoo 2
hash_map 1
hassle 2
hassubstr 4
have 77
have: 1
haven 2
having 5
header 2
heap 2
hello 4
help 6
helper 11
helper::complexjob 1
here 28
hi 14
hidden 2
hide 1
higher 1
highlighted 1
hit 1
hood 1
hoops 1
hope 1
hopefully 2
hopes 1
how 33
how: 1
however 21
https: 1
huh 2
human 1
i 15
idea 2
ideal: 1
ideally 2
if 169
ignore 2
ignoreresult 4
ignores 1
ignoring 5
illustrate 1
imagine 1
impl 4
implement 9
implementation 22
implementational 1
implemented 1
implementing 3
implements 4
implication 1
implicit_cast 2
implicitly 7
imply 1
important 2
impose 2
improve 1
in 255
in_range 2
inactive 1
inappropriate 1
inclosedrange 4
include 9
includes 2
including 4
incompatible 1
increase 1
increment 3
incrementarg1 2
incrementargument 2
incrementargumentaction 2
incrementcounter 4
incrementmethod 3
increments 1
incurred 1
incurs 1
indeed 1
index 2
indicate 3
indicates 1
indices 1
individually 1
individually: 1
infeasible 1
infer 2
inference 1
inferred 4
infers 1
infinite 1
info 5
information 9
informational 2
inherit 4
inherits 2
init 2
initial 1
injection 1
inline 2
inner 7
input 3
inrange 2
insequence 14
insert 2
inside 16
instance 8
instantiate 4
instantiating 1
instead 36
instead: 1
insulated 1
insurmountable 1
int 189
int32 2
int64_t 2
int_value 4
integers 1
integral 1
intend 2
intent 3
intentional 1
interact 1
interaction 1
interactive 1
interacts 2
interest 1
interested 10
interesting 1
interface 27
interfaces 6
interleave 1
intermediate 1
internal 2
internally 1
into 8
introduce 1
introduced 5
intuitive 1
invalid 1
invalidate 1
invariant 2
invariants 1
invocable 1
invocations 1
invoke 32
invokeargument 6
invoked 12
invokes 8
invokesbarcorrectly 1
invokewithoutargs 5
invoking 3
ioops 2
is 313
is: 1
is_gtest_matcher 4
is_ok 4
isdirty 3
isdivisibleby7 10
iseven 2
isfoo 1
isn 9
isnull 1
isolate 1
issatisfiedbycallcount 2
issaturatedbycallcount 2
isvisibleinquadrant1 4
it 206
it: 1
iterator 1
iterator: 1
its 36
itself 7
it’s 1
java 1
jmock 1
job 1
job1 3
job2 3
john 3
judiciously 2
jump 1
jumping 1
just 36
k 7
k1 1
k: 1
keep 2
keeps 1
kept 1
keventid 3
key 3
kind 1
kind1 1
kind_i 1
kind_m 1
kinternal 1
kn 1
know 7
knowing 1
knows 2
kpublic 1
label 2
lack 2
lacking 1
lambda 8
lambda: 1
lambdas 2
lambdas: 1
large 6
larry 2
last 10
last: 1
last_field 2
later 7
latter 4
le 3
lead 3
leading 1
leads 4
learn 1
learned 2
learning 1
least 1
leave 2
leaves 1
legacy 6
legacymoveonly 2
length 2
lengthy 1
less 12
let 12
lets 6
let’s 3
level 5
level: 1
lies 1
like 22
like: 3
likely 3
limit 1
limitations 1
limited 1
limiting 1
line 7
lines 2
list 11
list: 1
listener 5
lists 1
live 3
lives 1
living 1
ll 15
locations 1
locking 2
locks 1
log 21
logged 1
logic 4
logseverity 4
logsink 2
long 18
longer 2
look 4
looking 1
looks 1
losslessly 1
lossy 1
lot 5
lots 1
low 5
lower 1
lt 10
luckily 1
m 35
macro 14
macro: 1
macros 15
made 5
main 1
maintain 5
maintainable 1
maintenance 2
majority 1
make 25
makeaction 1
makebuzz 10
makecardinality 1
makefoo 1
makematcher 1
makemockturtle 1
makepolymorphicaction 4
makepolymorphicmatcher 3
makes 16
maketurtle 2
makeunique 4
making 5
manageable 1
many 15
map 3
mapintdouble 2
maps 1
marks 3
match 40
matchandexplain 17
matched 7
matcher 108
matcher_p 4
matcher_p10 1
matcher_p2 4
matcher_p3 1
matcher_pk 2
matchercast 3
matcherinterface 4
matchers 48
matchers: 2
matches 21
matching 13
matchresultlistener 5
matter 3
matters 2
max_depth 1
max_wight 2
maximum 1
may 66
maybe 1
maybe_os 2
md 10
mean 2
meaning 4
meaningful 1
means 5
member 5
members 3
mess 2
message 21
message: 2
message_len 3
messages 9
met 1
method 99
method: 3
methodname 4
methods 39
might 5
migration 1
min_weight 2
mind 1
minding 1
misc 1
mistake 2
misuse 1
mix 1
mixing 1
mock 231
mock: 1
mock::verifyandclearexpectations 3
mock_buzzer_ 16
mock_const_method1 1
mock_const_method1_t 1
mock_const_method1_t_with_calltype 1
mock_const_method1_with_calltype 1
mock_const_methodn 1
mock_event_dispatcher 3
mock_foo 20
mock_function 4
mock_method 87
mock_method1 1
mock_method1_t 1
mock_method1_t_with_calltype 1
mock_method1_with_calltype 1
mock_methodn 4
mock_obj 3
mock_object 1
mock_registry 6
mock_stream 4
mockable 1
mockarraymutator 2
mockbar 2
mockbuzzer 6
mockdomainregistry 1
mocked 6
mockeventdispatcher 2
mockfoo 75
mockfoo:: 1
mockfoo::concrete 2
mockfoo::mockfoo 1
mockfunction 12
mocking 21
mockingnonvirtualmethods 2
mockingsideeffects 1
mockmutator 4
mockpacketstream 7
mockprinter 2
mockrolodex 2
mocks 14
mockstack 1
mockturtlefactory 1
mode 3
modified 1
modifier 1
modify 1
monomorphic 3
more 48
most 11
mostly 1
mouthful 1
move 23
move_only_state 2
moved 1
moveonlyaction 2
moving 1
ms 1
much 6
multi 5
multiargmatchers 1
multiple 7
multiplier 2
multiplyby 2
must 51
mutate 6
mutateint 2
mutator 9
my_action 2
my_mock 10
myclass::foo 1
mydata 2
myisvisibleinquadrant1 2
mymock 2
mypredicate 1
myserver 1
myservertest 1
n 54
n1 1
n2 1
n_type 1
naggy 5
name 22
name1 1
name_i 1
name_m 1
named 5
namely 1
names 6
namespace 4
native 1
natural 1
naturally 1
ne 3
near 1
necessary 6
need 60
needed 1
needless 1
needs 6
negation 9
ness 2
nested 3
nesting 1
never 3
nevertheless 1
new 33
new_packet 1
newer 3
newmatchers 2
newmonoactions 1
newpermanentcallback 3
newpolyactions 1
news 1
next 8
nice 13
nicemock 13
nicer 1
nicestrictnaggy 2
nk 1
no 28
node 2
nodes 1
noexcept 3
non 11
nondeterministic 1
none 2
nor 1
normal 3
normally 2
not 109
note 34
note: 7
nothing 5
noticed 2
notification 2
notification::waitfornotification 1
notify 2
notnull 14
notnullmatcher 6
now 15
null 15
nullary 1
nullptr 8
num_values 1
number 26
numberofpackets 3
numbers 6
o 2
object 56
object: 1
objects 11
obscures 1
observe 2
obtained 1
obvious 4
obviously 1
occur 9
occurred 2
occurring 1
occurs 1
of 298
of: 7
off 1
offending 1
oft 1
often 9
oh 1
old 11
older 5
omit 3
on 58
on_call 30
oncall 1
once 11
onceaction 5
one 41
one: 1
ones 5
ones: 1
only 54
open 3
openfile 2
operation 1
operations 3
operations: 1
operator 11
operators 2
opposed 3
optimization 1
option 1
optionally 3
or 97
order 25
ordered 2
orderedcalls 2
ordinary 2
original 3
os 28
ostream 7
other 22
other_field 2
otherwise 2
our 7
out 12
output 8
output: 1
outside 1
over 4
overhead 2
overhead: 1
overload 5
overloaded 16
overloadedaction 1
overloading 4
overloads 2
overly 1
override 68
overrides 1
overriding 4
own 17
own: 1
owned 1
ownership 2
owns 1
p 20
p1 7
p1_type 4
p2 2
p_i 1
p_n 1
p_type 1
packet 7
packet_num 1
packet_number 2
packetreader 4
packetstream 4
page 2
pain 2
painful 2
pair 6
param 6
param_1 1
param_k 1
param_name 2
param_type 1
parameter 22
parameterize 1
parameterized 3
parameterlessexpectations 1
parameters 24
parameters: 3
parametrized 1
parent 1
parentheses 4
parentheses: 1
parsing 1
part 5
partial 1
partially 1
partialorder 1
participate 1
particular 10
parts 1
pass 10
passed 4
passes 3
passing 3
path 5
pattern 5
pattern: 1
pay 2
people 2
per 2
perf 1
perfectly 1
perform 8
performance 1
performed 2
performing 1
performs 2
perhaps 9
permutation 1
phase 1
phases 1
philosophy 1
pick 1
piece 1
pk 3
pk_type 4
place 3
places 1
plain 2
please 6
plus 3
point 4
pointed 6
pointee 12
pointer 34
pointers 4
points 4
polymorphic 14
polymorphicaction 2
polymorphicmatcher 1
positional 1
positive 1
possible 3
post 1
posted 1
potential 1
potentially 2
pound 1
power 1
practice 1
practicing 3
pre 5
precedence 6
predetermined 1
predicate 11
predicates 4
preferred 1
presents 1
press 1
pretty 1
prevent 2
previous 5
previous_value 3
principle 1
print 23
printed 3
printer 11
printertest 1
printing 2
prints 5
printtostring 2
private 3
private: 4
probably 1
probe 1
problem 14
problem: 2
problematic 1
problems 2
process 4
processesrequest 1
processrequest 1
produce 1
production 5
productive 1
profiling 1
program 2
program: 1
programmers 2
programs 1
project 1
projects 3
proper 1
properly 1
property 16
property: 1
pros 1
protected 3
protected: 1
proven 1
provide 6
provided 2
provides 6
providing 1
proxy 3
ptr 3
public 39
public: 58
pure 6
purely 1
purematchers 2
purpose 3
purpose: 1
push 2
put 7
qualification 1
qualifications 1
qualified 2
qualifiers 1
question 1
quickly 3
quicknewactions 1
quiz 1
r 8
race 1
range 4
rarely 1
rather 2
raw 3
ray 1
re 2
read 2
readability 2
readable 4
reader 2
readpackets 1
real 12
real_ 3
reality 1
realized 1
really 4
reason 2
reasons 1
receive 1
receives 4
recipe 5
recipe: 1
recipes 5
recommend 2
recommendation 1
recommended 3
reconstruct 1
recursion 1
redispatch 1
redundant 1
ref 5
refactor 1
refactoring 2
refer 6
reference 28
referenced 2
references 6
referencing 1
refers 1
reflect 1
regarding 1
regardless 2
reject 1
related 1
relative 1
relatively 1
relevant 1
reliable 1
remainder 8
remember 8
remember: 1
remembering 1
remind 1
removes 1
removing 1
rename 1
repeat 1
repeatedly 3
report 1
representable 1
represented 1
represents 1
require 3
required 5
required: 1
requirement 2
requirements 1
requires 3
requiring 1
reset 1
resilient 1
resolve 2
resort 1
resource 1
respectively 2
response 1
rest 2
restricting 1
restriction 2
result 24
result: 1
result_listener 2
resultcallback 2
resultcallback1 1
resultcallback2 1
resulting 1
resume 2
retaining 1
retire 3
retires 2
retiresonsaturation 1
return 133
return_type 2
returndistanceto 2
returned 5
returning 5
returnokwith 1
returnpointee 5
returnref 7
returns 31
returnsecondargument 3
returnsecondargumentaction 3
returntype 4
reusability 1
reused 2
rewrite 3
right 10
roles 2
rolodex 3
rule 2
rules 2
run 13
running 2
runs 1
runscallbackwithbarargument 1
runtests 1
s 126
s1 7
s2 8
sadly 1
safe 5
safely 1
safematchercast 4
safety 1
said 1
same 30
satisfied 5
satisfies 2
satisfy 1
saturate 1
saturated 1
saturated: 1
save 3
savearg 5
saveargverify 2
saved 1
saves 2
say 13
saying 1
says 8
scarcely 1
scope 4
scope: 1
scopedmocklog 1
scratch 1
second 15
section 5
see 17
seem 1
sees 1
selected 4
selecting 3
selectingargs 2
selectoverload 2
self 1
semantics 1
send 2
sendvalues 2
separate 1
separately 1
seq 1
sequence 12
sequences 2
sequential 1
serve 2
server 5
set 30
set_flag 2
setargpointee 8
setarrayargument 3
sets 5
setting 7
seven 1
several 3
severity 7
shadowed 1
shall 1
shame 1
share 4
sharebuzz 11
shared 3
sharing 5
she 1
shell 7
shorthand 1
should 26
shouldn 2
showed 2
shown 3
shows 1
side 6
sign 8
sign: 1
signature 6
signature: 1
signatures 2
significant 1
signofsum 3
similar 3
similarly 1
simple 7
simple: 1
simpler 2
simplerinterfaces 2
simplify 1
simplifying 1
simply 5
simulating 1
since 9
single 6
situations 1
size 2
size: 1
size_t 7
sizes 1
slack 1
sleep 1
slightly 1
slow 2
small 2
smart 1
snippet 1
snippets 1
so 38
so: 3
sole 1
solution 2
solutions 1
solve 2
solved 1
some 30
some_expression 3
some_field 2
some_other_expression 2
something 7
sometimes 28
somewhat 1
somewhere 3
soon 2
sounds 1
source 3
space 1
spammed 1
spec 2
special 6
specialize 1
specific 7
specifically 3
specification 1
specified 5
specifies 3
specify 24
specifying 2
specs 1
speed 1
spend 2
spent 1
split 3
sqrt 4
stack 13
stackinterface 4
standard 2
start 3
starts 1
startswith 1
state 5
statement 6
statements 20
static 1
static_cast 5
statically 1
staticasserttypeeq 1
std::back_insert_iterator 1
std::function 9
std::get 4
std::make_unique 1
std::map 4
std::move 1
std::ostream 20
std::pair 3
std::ref 10
std::shared_ptr 1
std::string 1
std::tuple 5
std::unique_ptr 11
stdmethodcalltype 9
step 5
steps 1
steps: 1
still 7
stl 7
store 1
str 9
str1 1
str2 1
strange 1
stream 8
streaming 2
streams 1
strict 10
strictly 1
strictmock 8
string 37
stringpiece 3
strlen 1
struct 5
structure 1
stub 2
stubs 1
stuff 1
style 5
sub 2
subclass 4
subclasses 1
substantially 1
succeed 1
succeeds 2
success 1
successful 1
such 11
sufficient 1
suffixed 2
suffixes 1
sugar 1
suggest 1
suggests 1
suit 2
suitable 1
suite 1
sum 7
sum3 3
super 1
supplied 2
supply 1
supplying 1
support 9
supported 3
supporting 2
supports 6
suppose 8
suppress 4
suppresses 1
sure 11
surprised 1
surrounded 1
symbol 3
symbols 1
synchronization 1
synchronously 1
syntactic 2
syntax 4
syntax: 3
system 9
t 128
t1 11
t_m 8
table 2
tailor 1
take 14
taken 4
takes 21
taking 3
talk 2
talking 1
tasks 1
td 64
teaching 2
technique 11
tedious 2
tell 7
tells 2
template 41
template: 1
templated 2
templates 5
templatize 1
temporary 3
tempted 2
tempting 1
ten 1
tend 1
term 3
terminated 1
terse 1
test 81
test_f 2
testability: 1
tested 1
testing 12
testing::_ 1
testing::allof 1
testing::elementsare 1
testing::ge 1
testing::hassubstr 1
testing::le 1
testing::matches 1
testing::ne 1
testing::pair 1
testing::return 2
testing::returnpointee 1
tests 38
text 6
text: 1
textual 1
th 25
than 31
that 253
that: 2
that’s 1
the 1027
their 7
them 23
then 18
there 25
therefore 10
there’s 1
these 8
they 29
thing 6
things 2
things: 2
think 3
thinks 1
third 4
this 145
this: 6
thomas 1
those 4
though 5
though: 1
thought 1
thread 13
threaded 2
threads 5
three 3
through 3
throw 1
throws 1
thus 3
tight 1
time 27
times 27
timestamp 5
timings 1
tip 3
tip: 2
tips: 3
tm 2
tm_time 2
tn 3
to 538
together 1
together: 1
too 15
top 2
totally 1
tr 48
trace 7
trace: 5
traces 2
transform 2
translated 1
translation 1
treat 1
treats 1
trick 2
tricks 2
tricky 1
tries 2
trigger 1
triggers 1
trimmed 1
trimming 1
trivial 3
trouble 1
true 16
truly 6
try 3
tuple 9
tuples 1
turn 2
turns 1
turtle 3
turtlefactory 1
tweak 2
twice 1
two 21
type 107
type: 1
typed 5
typedef 2
typedeq 2
typename 15
types 39
types: 2
typically 2
typing 2
typo 2
u 8
u1 1
u_i 1
u_k 1
ugly 1
uh 1
unary 2
unclear: 1
undefined 4
under 9
underlining 1
underlying 3
understand 4
understandable 1
understanding 2
unexpected 14
unfamiliar 1
unfortunately 1
unintentional 1
uninteresting 26
unique_ptr 7
unit 2
unless 3
unlike 1
unlimited 1
unlock 1
unoptimized 1
unorderedelementsare 2
unorderedelementsarearray 1
unprotected 2
unrelated 2
unsatisfied 1
unsets 1
unsigned 3
unspecified 1
unused 3
up 13
update 1
updatevalue 2
upon 1
upper 1
us 4
usage 1
use 105
use: 1
used 38
useful 6
useoncall 1
user 7
users 2
uses 11
using 226
usingcheckpoints 1
usingthreads 1
usual 4
usual: 1
usually 5
utilized 1
v 5
v1 4
v_i 1
v_n 2
valid 1
validate 4
validating 2
value 94
value: 1
value_type 1
values 26
values: 1
values—see 1
variable 13
variable: 1
variables 1
variety 1
vast 1
ve 1
vector 7
verbose 3
verification 7
verified 1
verifies 3
verify 18
verifying 2
versa 1
version 2
versions 1
versus 1
very 8
via 4
vice 1
view 3
viewed 1
violate 1
violated 2
violates 1
virtual 56
visible 6
vision 2
vk 2
void 56
vs 4
wait 1
waitfornotification 2
waitfornotificationwithtimeout 1
want 59
want: 1
wanted 1
wants 2
warning 19
warning: 3
warnings 8
was 8
wasn 2
way 17
ways 1
we 67
weakens 1
weaker 1
weigh 1
weight 4
well 9
were 2
what 23
whatever 1
when 82
whenever 3
whensorted 1
where 35
whereas 1
wherever 2
whether 4
which 47
while 7
who 1
whole 3
whose 12
why 4
why: 1
wide 1
widely 1
wildcard 1
will 128
willbydefault 10
willing 1
willonce 56
willrepeatedly 23
windows 1
wish 1
with 126
witharg 2
withargs 9
within 1
without 12
withoutargs 3
won 10
won’t 1
words 7
work 17
workaround 1
workarounds 2
working 1
works 13
works: 1
world 2
worlds 1
worry 4
worrying 1
worse 3
would 13
wrap 4
wrapper 3
wrapping 5
write 21
write: 6
writing 15
written 6
wrong 10
x 81
xyz 3
y 34
yahoo 1
yes 2
yet 9
you 437
you: 1
your 94
yourself 3
you’ll 2
z 4
zero 1
“buzzes” 1
