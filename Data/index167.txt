C:\itmo\OP\10TTaskScheduler\cmake-build-debug\_deps\googletest-src\googletest\include\gtest\gtest-death-test.h
1909
0 8
1 3
12 5
2 1
2005 1
3 1
4 1
5 2
56 1
7 1
: 1
::testing::exitedwithcode 1
::testing::internal::alwaysfalse 1
::testing::internal::alwaystrue 1
::testing::internal::exitedunsuccessfully 2
::testing::internal::re::partialmatch 1
::testing::message 1
\ 20
\\ 1
\\c 1
\\d 2
\\f 1
\\n 1
\\r 1
\\s 2
\\t 1
\\v 1
\\w 3
\f 1
\n 4
\r 1
\t 1
\v 1
_ 1
_exit 1
a 54
above 3
absolute 1
accept 1
accepts 1
accidentally 1
active 1
additional 1
advised 1
after 2
against 1
all 1
allows 2
already 2
always 1
among 1
an 10
and 31
any 14
any: 2
api 1
applied 1
appropriate 2
are 13
argv 1
arising 1
as 11
ascii 1
assert 2
assert_death 9
assert_death_if_supported 7
assert_debug_death 2
assert_exit 5
assertions 3
asserts 4
at 3
bar_test 1
bare 1
be 12
because 1
beginning 1
behavior 1
being 1
below 1
binary 4
bool 4
boolean 1
both 1
brackets 1
branch 1
break 1
business 1
but 11
by 9
c 4
call 1
caller 1
can 4
cannot 1
case 3
caused 1
causes 3
caveats: 1
certain 1
character 7
checkers 1
checks 1
child 4
chose 1
class 2
classes 1
client 1
clone 2
code 10
combining 1
come 1
compatibility 2
compilational 1
compile 5
compiled 4
compiles 2
compliant 1
condition 1
conditions 3
consequential 1
const 6
constructor 1
contains 1
context 1
continues 2
contract 1
contributors 3
controls 1
copyright 5
correct 1
count 1
crashes 1
current 1
currently 1
damage 1
damages 1
data 2
dbg 2
dcheck 1
death 28
death_test_style 1
debug 4
decimal 3
default 1
define 14
defines 1
delete 1
denote 1
denotes 1
derived 1
describes 2
dfatal 3
die 2
dieindebugor12 3
dieindebugreturn12inopt 1
digit 3
direct 1
directly 1
directory 1
disclaimed 1
disclaimer 2
distribution 1
do 1
documentation 1
does 1
doesn 4
don 2
due 2
e 2
each 3
easy 1
effect 1
effects 3
either 1
else 5
emitting 2
empty 1
end 3
endif 6
endorse 1
enough 2
ensure 3
ensures 1
equivalent 1
error 3
escape 1
evaluated 1
even 1
event 1
example 1
examples: 1
except 1
execute 2
executed 2
executed: 1
executes 1
executing 1
exemplary 1
existing 1
exit 10
exit_code 4
exit_code_ 1
exit_status 2
exited 1
exitedwithcode 5
exiting 2
exitnow 1
exits 1
expand 1
expect 1
expect_death 11
expect_death_if_supported 7
expect_debug_death 6
expect_eq 3
expect_exit 2
explicit 2
explicitly 1
exposed 1
express 1
expression 2
expressions 3
extended 4
failed 1
failure 1
fallback 1
false 1
fast 1
features 2
file 1
final 1
find 1
fine 1
fitness 1
flag 1
followed 1
following 5
following: 1
foo_test 2
for 18
fork 1
forking 1
form 1
forms 1
framework 2
friend 2
from 5
function 1
functions 2
g 2
general 1
generates 1
generating 1
get 1
given 5
gmock 1
goods 1
google 5
googletest_include_gtest_gtest_death_test_h_ 3
grouping 1
gtest 6
gtest_ambiguous_else_blocker_ 1
gtest_api_ 3
gtest_death_test_ 2
gtest_declare_string_ 1
gtest_execute_statement_ 2
gtest_fatal_failure_ 1
gtest_has_death_test 4
gtest_log_ 1
gtest_nonfatal_failure_ 1
gtest_os_fuchsia 1
gtest_os_windows 2
gtest_suppress_unreachable_code_warning_below_ 1
gtest_unsupported_death_test 3
h 4
hanging 1
hangupserver 1
happens 1
has 5
hasn 1
have 3
header 1
heap 1
hello 1
here 2
highly 1
holders 1
however 1
i 5
if 18
ifdef 2
ifndef 1
immediately 1
implementation 4
implemented 2
implementing 1
implied 2
important: 1
in 32
inc 2
incidental 1
include 4
included 1
including 4
incurs 1
indeathtestchild 1
indicating 1
indirect 1
inside 1
int 11
integer 1
interesting 1
internal 5
interpreted 1
interruption 1
into 1
invalid 2
invoke 1
is 20
is: 1
issue 1
it 14
its 1
iwyu 3
just 1
killed 1
killedbysighup 2
killedbysignal 2
known 1
lacks 1
launching 2
learn 1
least 1
letter 1
liability 2
liable 1
library 2
like 2
limited 3
line 2
list 2
literal 3
log 3
logic 1
loss 1
m 1
mac 1
macro 11
macros 4
make 1
many 3
match 1
matcher 12
matches 22
materials 1
may 3
meaning 2
means 1
meant 1
merchantability 1
message 2
messages 1
met: 1
mocking 1
mode 10
modification 1
modify 1
more 1
most 1
must 7
n 1
name 1
names 1
namespace 4
natural 1
ndebug 3
need 3
negligence 1
neither 1
never 1
nix 1
no 2
none 1
nonzero 1
nor 1
normal 2
not 17
notice 2
number 1
numbers 1
obtains 1
occurrences 3
of 33
on 13
one 4
only 8
operator 3
opt 5
or 26
other 3
others 1
otherwise 2
out 1
output 3
overhead 1
own 1
owner 1
parameter 3
parameters 1
parameters: 1
parent 3
part 1
particular 1
path 7
pattern 1
pcre 3
people 1
perform 1
period 1
permission 1
permitted 1
platform 1
platforms 1
please 1
port 1
posix 5
possibility 1
practice 1
pragma: 3
predicate 6
prior 1
private 1
private: 2
problem 1
process 14
processrequest 2
procurement 1
products 1
profits 1
program 5
promote 1
protects 1
provided 3
public 1
public: 2
publicly 1
punctuation 1
purpose 1
put 1
rarely 1
re 2
real 1
redistribution 1
redistributions 2
regex 30
regular 4
repetition 1
reproduce 1
request 2
requirements 1
reserved 1
retain 1
return 4
returns 3
rewrite 1
rights 1
robust 1
run 1
running 1
runs 1
s 6
safe 1
same 1
satisfies 1
search 1
semantics 1
sendmessage 1
separator 1
sequence 1
server 3
services 1
shall 1
should 2
side 3
sideeffect 10
sideeffects 1
sighup 1
signal 2
significant 1
signum 1
signum_ 1
simple 1
simplicity 1
since 1
single 4
so 3
software 3
source 2
special 1
specific 1
start 1
statement 42
statements 1
status 1
stderr 1
streaming 1
strict 1
stricter 1
string 3
style 2
style: 1
sub 7
subset 1
substitute 1
successive 2
such 8
suite 2
support 5
supported 3
supporting 1
sure 2
syntactically 1
syntax 6
system 2
systems 5
t 7
terminate 1
termination 2
terminator 4
test 26
testdieor12worksindgbandopt 1
testing 4
tests 18
tests: 1
testsuite 1
than 2
that 37
the 78
their 2
theory 1
there 2
these 1
they 1
this 31
those 1
though 1
thread 2
threadsafe 2
throws 1
thus 1
time 2
to 35
tools 1
tort 1
try 1
tuned 1
two 1
unconditionally 1
union 1
unreachable 2
up 1
us 1
use 7
used 6
useful 2
user 3
uses 1
using 2
usually 2
utility 1
utilize 1
valgrind 1
valid 1
value 2
values 1
verified 1
via 1
visible 3
void 1
waits 1
warning 4
warranties 2
way 1
we 5
well 1
what 1
when 5
where 2
wherever 1
whether 2
which 3
whitespace 2
wifsignaled 1
will 7
windows 1
with 13
within 1
without 2
would 3
write 2
writing 2
written 1
wrote 1
wtermsig 1
x 4
xy 3
y 3
you 6
your 1
