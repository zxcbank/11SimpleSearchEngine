C:\itmo\OP\10TTaskScheduler\cmake-build-debug\_deps\googletest-src\docs\gmock_faq.md
2459
0 5
06 1
1 6
2 6
2005 1
2008 2
5 1
6 1
: 7
::testing::_ 5
::testing::anynumber 1
::testing::invoke 1
::testing::not 1
::testing::return 3
_ 8
a 67
about 3
above 1
accidentally 1
action 10
actioninterface 2
actions 6
actual 1
actually 1
adding 2
address 1
all 1
allows 1
also 1
an 14
and 46
another 1
answer 2
any 7
anynumber 1
api 1
appropriate 1
arbitrary 1
are 29
argue 1
argument 4
argument: 1
arguments 9
arises 1
as 10
assert 2
at 1
author 1
avoid 2
awkward 1
back 3
bad 1
bar 22
base 9
based 4
be 26
because 1
behavior 3
being 3
believe 1
best 1
better 4
between 3
big 1
bit 1
blog 1
body 1
both 1
bug 3
bugs 1
but 10
by 12
c 10
c4301 1
c4301: 1
c4373 1
c4373: 1
call 8
called 14
calls 7
can 26
cannot 2
case 4
causes 1
cc 1
certain 1
chain 1
change 1
changes 2
changing 1
check 1
checker 1
checking 1
choose 2
choosing 1
circumstance 1
class 11
cling 1
clr 2
code 4
code: 1
com 1
common 1
comparison 1
compile 1
compiler 3
compiles 1
compiling 3
complain 1
complains 1
complex 2
compounded 1
conflicting 1
consider 1
const 16
constructor 2
constructors 1
context 1
control 2
convenient 1
correct 1
correctly 1
could 1
coupled 1
cpp 13
crashed 1
crashes 1
create 1
creep 1
custom 1
customize 1
debug 1
debugging 1
declaration 1
declarations 1
declare 2
declaring 1
default 7
defeat 1
define 4
defining 3
delete 5
dependency 1
depth 1
derive 1
derived 4
description 1
destructor 2
destructors 1
detailed 1
details 1
detected 1
detects 1
did 1
didn 3
differed 1
difference 1
different 3
differs 1
directly 2
disallow 1
do 9
doall 1
does 4
doesn 2
doing 2
don 4
done 1
double 1
due 1
dumps 1
e 3
each 2
early 1
easier 2
easiest 1
easily 2
easy 1
economical 1
effect 1
effective 1
effects 1
either 2
ellipsis 2
encountered 2
end 1
endswith 1
equivalent 1
equivalent: 1
error 6
errors 1
etc 2
even 1
every 1
everywhere 1
example 6
excellently 1
executed 1
exercise 1
expect 1
expect_call 13
expectation 2
expectation: 1
expectations 15
expected 3
experience 1
explicit 1
express 1
fact 2
failed 1
failure 4
failures 1
fake 1
faq 1
fault 1
feature 1
figure 3
find 4
finds 1
fine 3
first 3
fixture 1
flag 2
flexible 1
following 3
foo 17
foo::bar 2
for 19
forgot 1
free 1
from 7
front 2
function 28
functions 2
functionsasactions 1
fundamental 1
fyi 1
g 2
gain 1
gcc 2
general 2
get 4
gives 1
giving 1
global 1
gmock 23
gmock_cheat_sheet 1
gmock_cook_book 2
gmock_verbose 2
go 2
going 1
google 1
googleblog 1
got 2
great 2
h 1
handle 1
handler 1
happen 1
happy 1
harder 1
has 3
have 9
haven 1
having 1
head 1
heap 1
heapcheck 1
help 1
her 1
here 3
high 1
his 1
hopefully 1
how 6
however 3
html 1
https: 1
huge 1
i 25
idea 1
if 23
ignore 1
ignored 1
ignores 1
implement 1
implementation 1
implementing 1
in 33
including 1
indexed 1
info 2
information 3
inherited 1
initially 1
injection 1
insequence 1
insights 1
instead 3
int 9
intent 1
interaction 1
intercepts 1
interested 1
interesting 1
interface 4
into 1
investigate 1
invoke 5
invoked 2
is 42
isn 1
issue 1
it 38
its 3
itself 1
jmock 1
just 4
know 2
known 1
knows 1
later 1
latter 2
leaked 1
lean 1
learn 1
legacy 1
less 4
let 1
lets 1
level 2
life 1
like: 2
likely 1
ll 2
log 4
look 1
lot 2
make 5
makeaction 1
makepolymorphicaction 2
makes 2
making 1
many 2
map 1
match 3
matched 1
may 3
md 3
me 2
mean 2
meaningful 1
meaningless 1
means 3
meant 1
memory 2
message 2
messages 3
met 1
method 8
microsoft 2
might 3
mock 27
mock_foo_ 2
mock_method 3
mocked 3
mockfoo 2
mockfoo::bar 2
mocking 2
mockingnonvirtualmethods 1
mocks 7
modifier 2
modules 1
more 5
msvc 2
much 2
must 2
my 5
my_file 1
myaction 1
n 2
native 1
natural 1
neat 1
need 3
needing 2
needs 1
neither 1
never 1
new 1
newer 1
newmonoactions 1
newpolyactions 1
nice 1
no 8
noisy 1
nor 1
not 19
note 2
noticed 1
notifying 1
number 2
object 9
objects 1
of 22
off 2
often 4
ok 3
older 1
on 8
on_call 5
oncall 1
one 3
ones 1
only 3
or 15
order 5
original 1
other 1
otherwise 1
out 7
output 1
over 1
overloaded 1
override 3
overrides 1
overriding 1
own 1
p 10
pain 3
panic 1
parameter 6
parameters 1
part 1
particular 3
passed 2
pattern 1
pays 1
people 3
perf 1
perform 3
phase 1
philosophy: 1
pick 1
point 1
pointee 1
pointer 2
points 1
possible 2
possibly 1
post 1
precise 2
previous 1
print 2
printed 1
printing 1
prints 4
private: 1
probably 2
problem 5
program 1
protocol 1
provide 1
provides 1
public 2
public: 2
pure 1
put 2
qualifier 1
qualifiers 1
question 1
questions: 1
quickly 1
quietly 1
rarely 1
real 3
really 1
reasonable 1
receives 1
recipe 1
recommend 2
redundant 2
refer 1
referee 1
reference 1
referring 1
relevant 3
remember 1
remove 1
report 1
retiresonsaturation 5
return 19
returns 1
reusable 1
reverse 1
rewrite 1
right 3
robust 1
rule 2
rules 1
run 1
runs 1
s 33
safe 1
same 5
satisfied 2
say 2
says 2
scopedmocklog 3
search 1
searches 1
second 3
see 5
sequence 2
sequence: 1
set 9
setargpointee 3
setup 1
shell 2
should 13
shouldn 1
show 2
side 2
sign 1
signal 1
simulate 1
since 1
small 1
so 4
solve 1
some 3
something 1
sometimes 5
soon 1
sp1 1
sp1: 1
spec 1
specific 1
specified 1
specify 2
specifying 1
spit 1
stack 2
stacks 1
state 9
static 3
std::string 1
still 2
strong 1
stub 1
studying 1
stuff 1
such 1
suck 1
sucks 2
suggest 1
supported 1
sure 2
surprise 1
system 2
t 14
taken 1
takes 1
taking 1
talking 1
teach 1
technique 1
tells 2
tempted 1
test 14
testable 1
testing 5
testing: 1
testing::deletearg 2
tests 1
th 1
than 1
that 31
the 120
their 2
them 6
then 3
there 4
therefore 4
these 1
they 10
thing 1
things 1
think 2
thinks 1
this 21
threads 1
through 2
tightly 1
time 8
times 5
to 61
to: 1
tons 1
too 2
tool 1
top 1
toward 1
trace 4
tries 1
triggered 1
try 2
trying 1
twice 5
two 3
type 3
types 4
unexpected 1
uninteresting 3
unless 1
unnoticed 1
unsafe 1
up 4
us 1
use 8
used 3
useful 1
user 5
uses 1
using 24
usually 2
value 6
value_ 2
values 1
variadic 3
vc 1
ve 1
verbose 1
verbosity 1
verify 1
versions 2
very 2
virtual 9
visual 4
void 7
volatile 2
want 7
warning 9
warning: 2
was 1
way 7
ways 1
we 11
well 1
what 15
when 20
whenever 1
where 1
which 4
while 1
why 5
will 8
willbydefault 1
willonce 9
willrepeatedly 1
with 11
without 4
won 1
work 3
workaround 1
would 2
write 8
writing 1
wrong 3
x 3
y 2
you 61
your 12
yourself 2
zero 1
