C:\itmo\OP\10TTaskScheduler\cmake-build-debug\_deps\googletest-src\docs\primer.md
2957
0 7
1 11
10 1
11 1
2 8
20case 1
20suite 1
3 6
4 3
40320 1
5 3
6 3
8 2
: 13
::testing::initgoogletest 2
::testing::test 3
_ 5
_f 1
_not_ 1
_note:_ 1
_test 7
_test_ 3
_unsafe_ 1
a 65
abc 1
abort 2
aborts 1
about 3
above 4
access 2
across 1
addition 1
advanced 3
advancedguide 1
affect 1
after 9
agree 1
all 11
allocated 1
allow 2
allows 4
along 2
already 1
also 6
always 1
an 7
and 54
another 1
any 8
anything 1
api 2
appended 1
apply 1
architecture 1
are 11
argc 2
argument 4
arguments 1
argv 2
arising 1
as 15
assert_ 5
assert_eq 2
assert_ne 3
assertion 12
assertions 17
at 5
automated 1
automatically 1
availability 3
available 1
aware 1
away 1
bar 1
base 1
based 3
basic 2
basics 1
be 28
before 7
behavior 4
being 2
believe: 1
belong 1
better 1
beware 2
board 1
bodies 1
body 3
boilerplate: 1
boolean 1
both 3
broad 1
bugs 1
building 1
but 4
by 12
c 18
call 3
called 2
calling 3
callout 3
calls 1
can 25
cannot 1
case 6
case_ 5
cause 1
causes 1
changes 1
char 1
check 3
checker 1
chores 1
class 15
classes 2
clean 4
cleaning 1
cleans 2
code 11
collection 1
come 1
comes 1
command 1
common 3
commonly 1
compare 1
compile 1
compiled 1
compiler 3
compilers 1
complete 1
completely 1
complex 1
concepts 1
concurrently 1
condition 1
conditions 1
configuration 2
configurations 1
conflicts 1
confusing 1
confusion 1
consistency 1
consists 1
const 4
constraints 1
constructor 4
constructs 1
contain 2
containing 1
contains 1
content 1
continue 2
continues 3
continuing 1
contradictory 1
control 1
convention 2
correctly 1
corresponds 1
cover 1
cppguide 1
crashes 2
create 4
creates 2
ctorvssetup 1
current 8
currently 1
custom 4
cycle 1
dat 2
data 4
death 2
debug 1
debugging 1
declaration 1
declare 1
declared 1
default 1
define 5
defined 3
defines 1
defining 1
definition 1
definitions 2
delete 3
deletes 2
depend 1
depending 1
deprecated 2
dequeue 5
dequeueworks 2
dereference 1
derive 1
design 1
designed 1
destructed 1
destructor 5
details 1
detect 1
determined 1
determines 1
developed 1
differ 1
different 12
do 4
does 5
doesn 5
doesxyz 1
don 4
done 2
down 1
e 6
each 9
easy 2
edit 1
effects 1
either 1
element 2
empty 2
en 2
enable 1
end 1
enough 2
enqueue 4
entire 1
entry 1
enumerate 1
equality: 1
error 4
errors 2
especially 1
even 2
example 5
exceptions 2
exercise 1
exercises 1
exit 1
expect_ 4
expect_eq 15
explain 1
expressed 1
f 2
factorial 9
factorialtest 3
fail 2
failed 2
fails 7
failure 11
failures 3
faq 2
fast 1
fatal 5
fatally 2
favor 1
feature 1
features 1
feel 1
fifo 1
file 1
files 1
find 1
finishes 1
first 8
fit 1
fits 1
fix 1
fixing 1
fixture 20
fixture: 2
fixtures 1
fixtures: 1
flags 6
floating 1
focus 1
follow 1
following 5
foo 7
foo::bar 1
footest 6
for 30
framework 3
frameworks 1
fresh 1
from 10
full 1
function 18
function: 1
function_names 1
functions 4
g 2
general 1
generate 2
get 4
github 1
give 1
glossary 2
go 3
good 2
google 7
googletest 36
group 1
grouping 1
groups 2
gtest 4
gtest_main 2
guessed: 1
h 3
handle 1
handlespositiveinput 2
handleszeroinput 2
happens 1
happens: 1
has 4
have 7
heap 1
help 2
helpful 1
helps 1
here 6
historically 1
home 1
housekeeping 1
how 2
however 1
html 1
http: 4
https: 1
i 6
identifiers 1
if 22
ignore 1
immediately 4
implement 1
implementation 2
implicitly 1
important 1
important: 1
in 38
include 3
including 2
independent 1
index 1
individual 3
information 1
initgoogletest 2
initialize 1
initialized 1
initializes 2
input 1
input_filepath 2
inside 1
instead 3
int 9
integer 1
interface: 1
international 1
into 4
introduction: 1
invoked 1
invoking 1
io 1
is 35
isemptyinitially 2
isolates 1
isolation 1
issue 1
istqb 13
it 30
its 7
junit 1
just 2
keep 1
keeps 1
kind 1
known 1
later 1
lead 1
leak 2
learn 2
length 1
let 5
level 1
liberate 1
library 2
like 1
like: 1
limitations 1
line 2
link 3
linux 4
list 2
ll 6
location 1
logically 1
look 1
lot 1
mac 4
macro 6
macro: 1
macros 2
main 8
maintain 1
make 3
makes 3
making 2
many 2
materials 1
may 4
maybe 1
md 5
meaning 1
members 2
message 4
method 1
methodbardoesabc 1
methods: 1
might 2
mind 2
minutes 1
mistake 1
misunderstanding 1
mode 2
more 6
most 2
much 4
multiple 6
must 6
my 2
myinputfile 1
myoutputfile 1
n 15
name 9
named 1
names 1
namespace 6
naming 2
nature 1
necessary 3
need 4
needed 2
needs 1
neutral 2
new 1
next 3
nomenclature 1
non 2
nonfatal 2
normally 1
not 14
note 4
note: 1
now 2
null 2
nullptr 4
number 1
numbers 1
object 5
objects 7
occurs 1
of 46
older 1
on 21
once 3
one 4
only 4
operate 1
operator 1
operators 2
opposed 1
or 22
order 2
ordinary 1
org 4
organized 1
oses 1
ostream 1
other 7
others 1
otherwise 4
output 1
output_filepath 2
outside 1
override 6
own 2
package 3
pain 1
pairs 1
parsegunitflags 1
parses 1
particular 2
passed 1
path 1
pattern 1
pay 1
people 1
plan 1
platform 3
please 1
point 2
pointer 1
popular 1
port 1
portable 1
positive 1
possible 1
possibly 1
predicates 1
preferred 2
prepare 1
primer 1
primitives 1
printed 1
prints 1
probably 1
problem 2
program 5
programs 1
project 2
projects 1
properly 1
protected: 3
provide 2
provided 1
provides 2
providing 1
pthreads 1
public 2
public: 1
publications 1
put 1
pyunit 1
q0_ 3
q1_ 4
q2_ 5
qualifications 1
quality 1
question 1
queue 8
queuetest 5
quick 1
rationale 1
re 1
read 1
recently 1
recognize 1
recognized 1
refactored 1
reference 3
reflect 2
register 1
related 4
relational 1
release 1
remainder 1
remove 1
removes 1
repeatable 1
repeated 1
repeats 1
replacing 1
report 1
reported 1
require 1
requirements 1
resemble 1
resources 2
restores 1
result 3
results 2
return 5
returns 4
reusable 1
reuse 3
reveal 1
right 3
rule 1
run 9
run_all_tests 9
running 2
runs 3
runtime 1
s 18
safe 3
same 11
saves 1
search 2
second 2
section 2
see 3
segfault 1
sense 4
sequence 1
service 1
set 3
setting 1
setup 10
several 1
share 3
shared 1
should 20
similar 1
simple 3
simply 1
since 3
single 2
size 7
size_t 1
skipped 1
skipping 1
slowly 1
small 1
so 10
software 2
some 2
something 1
source 2
space 1
specific 3
spell 1
spelled 1
start 4
started 3
starting 1
state 2
statements 2
states 1
std::string 2
std::wstring 1
stderr 1
stdout 1
steps 3
stop 1
stops 1
stream 1
streamed 3
string 3
strings 2
structure 2
styleguide 1
sub 1
subroutines 4
subsequent 1
succeeds 3
success 1
successful 1
such 2
suitable 1
suite 14
suite_ 2
suites 9
supply 1
supported 1
supports 1
sure 1
switch 1
synchronization 1
system 1
systems 2
t 10
t1 6
take 2
tchar 1
team 1
tear 1
teardown 8
technology 1
template 1
term 9
terms 1
terms: 1
test 100
test: 1
test_f 11
testcase 1
testdata 2
tested 4
testfixturename 1
testing 7
testname 2
tests 58
testsuite 1
testsuitename 1
textbooks 1
than 3
that 24
the 155
their 4
them 7
then 3
there 2
these 3
they 5
thing 1
think 1
this 20
those 1
thread 4
threads 1
throw 1
thumb 1
thus 4
time 1
to 62
too 1
track 1
translated 1
true 1
two 3
type 1
typename 1
types 1
u 1
underscores 1
unequal 1
unfortunately 1
unicode 2
unit 2
unlike 1
until 1
up 12
us 1
use 15
used 5
user 2
users 1
uses 1
using 8
usually 2
utf 1
valid 2
value 5
values 5
variety 1
various 4
ve 2
vectors 2
verify 5
verifying 1
versions 2
via 4
virtual 1
void 5
volunteer 1
want 4
was 1
ways 1
wchar_t 1
we 9
well 2
what 2
when 19
where 2
whereas 1
whether 3
which 9
why 2
wide 2
will 8
windows 7
with 22
within 2
without 2
won 1
words 1
work 6
works 2
worth 1
would 2
write 9
writers 1
writing 4
wrong 1
www 2
x 5
xunit 1
xyz 2
y 4
you 54
your 12
yourself 1
